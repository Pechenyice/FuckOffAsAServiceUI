import Head from 'next/head'
import Image from 'next/image'
import { ChangeEvent, useState } from 'react';
import { useEffect } from 'react';
import FuckingCard from '../components/FuckingCard';
import FuckingControls from '../components/FuckingControls';
import { fetchFucks } from '../helpers/fetching';
import CommonLayout from '../layouts/Common';
import styles from '../styles/Home.module.css';
import { IFucks } from '../types/commonTypes';

export default function Home({ fucks }: IFucks) {
  let [type, setType] = useState('ceil');

  let [showFuckingNotice, setShowFuckingNotice] = useState(false);

  let [pieces, setPieces] = useState(fucks);

  let [from, setFrom] = useState('');
  let [to, setTo] = useState('');

  function handleFilterChange(e: ChangeEvent<HTMLInputElement>): void {
    setPieces(fucks.filter(f => f.title.includes(e.target.value)));
  }

  function handleNewView(newType: string): void {
    setType(newType);
  }

  function handleNewFrom(e: ChangeEvent<HTMLInputElement>): void {
    setFrom(e.target.value);
  }

  function handleNewTo(e: ChangeEvent<HTMLInputElement>): void {
    setTo(e.target.value);
  }

  function handleNeedShowFuckingNotice(): void {
    setShowFuckingNotice(true);
    setTimeout(() => setShowFuckingNotice(false), 3000);
  }

  return (
    <CommonLayout className={styles.container} title={'FOaaS UI'} heading={'Welcome to FOaaS UI interface'}>
        <Head>
          <meta name="description" content="Generate fuck off texts with foaas api" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <div className={styles.mainWrapper}>
            <div className={styles.inputsWrapper}>
              <input className={styles.input} value={from} type={'text'} placeholder='from' onChange={handleNewFrom} />
              <p className={styles.chevron}><i className="fas fa-chevron-right"></i></p>
              <input className={styles.input} value={to} type={'text'} placeholder='to' onChange={handleNewTo} />
            </div>

            <div className={styles.divider}></div>

            <FuckingControls onChange={handleFilterChange} onNewView={handleNewView} currentView={type} />
          </div>

          <ul className={[styles.piecesWrapper, type == 'ceil' && styles.piecesFlexibleWrapper].join(' ')}>
            {
              pieces.map((f, i) => <li key={i + '-' + f.id}><FuckingCard showNotice={handleNeedShowFuckingNotice} as={`/fuckingCard/${f.id + '::' + from + '::' + to}`} href={'/fuckingCard/[data]'} from={from} to={to} type={type} cardData={f} /></li>)
            }
          </ul>
        </main>

        <footer className={styles.footer}>
          <a
            href="http://foaas.com"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}foaas.com
          </a>
          <a
            href="https://github.com/Pechenyice"
            target="_blank"
            rel="noopener noreferrer"
          >
            Generated by{' '}German Iskhakov
          </a>
        </footer>

        <div className={[styles.fuckingNotice, showFuckingNotice && styles.showFuckingNotice].join(' ')}><p>Copied to clipboard!</p></div>
    </CommonLayout>
  )
}

export async function getStaticProps() {
  // const data = await fetch('http://foaas.com/fucks');
  // let fucks = await data.text();
  // let fucksArr = fucks.split('</tr>');
  // fucksArr.pop();
  // let results = [];
  // for (let f of fucksArr) {
  //   let unTrimmedStr = f.split('</td>')[1]?.split('form')[1].trim().split(':from').join(`:from:`).split(':to').join(`:to:`).split(':company').join(`:company:`).split(':name').join(`:name:`).split(':noun').join(`:noun:`).split(':language').join(`:language:`).split('');
  //   unTrimmedStr.pop();
  //   unTrimmedStr.shift();
  //   results.push({
  //     title: f.split('</td>')[0].split('/')[1],
  //     text: unTrimmedStr.join('')
  //   });
  // }
  let results = await fetchFucks();
  return {
    props: {
      fucks: results
    }
  }
}
